// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4
#define DFLT 0
#define NUM 1
#define ARW 2
#define MOD 3

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        
    };
     conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM ARW>;
            then-layer = <MOD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q      &kp W      &kp F      &kp P      &kp G          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
            &kp A        &kp R       &kp S     &kp T     &kp D          &kp H      &kp N     &kp E       &kp I     &kp O
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp K      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                          &lt NUM BSPC   &kp LSHFT  &kp SPACE   &lt ARW ENTER    
            >;
        };

        num_layer {
            bindings = <
            &kp ESC    &kp GRAVE  &kp SQT   &kp MINUS   &kp F12        &trans     &kp LBKT   &kp RBKT       &trans      &trans
            &kp N1    &kp N2     &kp N3     &kp N4      &kp N5        &kp N6     &kp N7     &kp N8     &kp N9    &kp N0
            &trans     &trans      &trans    &kp EQUAL     &trans         &trans     &trans     &trans     &trans   &kp BSLH
                                             &trans     &kp ESC        &trans     &kp LSHFT
            >;
        };

        arrow_layer {
            bindings = <
            &trans     &trans      &trans     &trans    &trans         &kp GRAVE    &kp S     &kp UP     &trans     &trans
            &kp LALT   &kp LCMD   &kp LCTRL   &kp LSHFT   &trans      &trans       &kp LEFT  &kp DOWN    &kp RIGHT   &kp TAB
            &trans     &trans     &trans     &trans     &trans         &kp C       &kp V     &kp P     &bt BT_NXT  &bt BT_CLR
                                             &trans     &trans         &trans     &trans
            >;
        };

        mod_layer {
            bindings = <
           &trans      &trans     &trans     &trans    &trans            &trans     &trans     &trans     &trans    &trans
           &mt LALT A &mt LCMD R &mt LCTRL S  &mt LSHFT T  &trans      &trans    &mt RSHFT N &mt RCTRL E  &mt RCMD I &mt RALT O
            &trans     &trans     &trans    &trans      &trans           &trans     &trans     &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };
    };
};
